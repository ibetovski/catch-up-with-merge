#!/bin/bash
# This script is hardcoded to work with remote named "origin"
# author: Iliyan Betovski <iliyan.betovski@mobilewaves.com>

# Where to keep the branch names.
FILE="____CATCH-UP-BRANCHES"
NAME="catch-up-with-merge"
VERSION="0.0.2"

log() {
  echo -e "- \033[33$NAME\033[0m: ${1}"
}

# check if the $FILE exists in the .gitignore to prevent accidentally commiting it
addCatchupFileToGitignore() {
  if [[ -e .gitignore ]]; then
    IS_FILE_IN_GItIGNORE=`cat .gitignore | grep ${FILE}`

    if [[ ${#IS_FILE_IN_GItIGNORE} -eq 0 ]]; then
      log "Adding ${FILE} to .gitignore"
      printf "\n$FILE" >> .gitignore
    else
      log "Found ${FILE} in .gitignore"
    fi
  else
    log "Can not find .gitignore."
    log "WARNING: Be careful and avoid commiting ${FILE}"
  fi
}

exitIfCatchupFileIsMissing() {
  if [ ! -f $FILE ]; then
    log "First you should do \"catch-up [branch-name]\"";
    exit 1
  fi
}


# how many integers to put in the temporary branch's name
RANDOM_NUMBER_LENGTH=8

# if the option to the script is "--continue"
if [[ $1 == "--continue" ]]; then
  # check if the temporary file exists. We need it take the branch names from there.
  exitIfCatchupFileIsMissing

  log "Deletes original branch";

  FEATURE_BRANCH=`cat $FILE | awk '{print $1}'`
  TEMP_BRANCH=`cat $FILE | awk '{print $2}'`
  rm $FILE;
  git branch -D $FEATURE_BRANCH;

  log "Renames the current branch to the FEATURE_BRANCH"

  git branch -m $TEMP_BRANCH $FEATURE_BRANCH
  git branch --set-upstream-to origin/${FEATURE_BRANCH}

elif [[ $1 == "--abort" ]]; then
  # check if the temporary file exists. We need it take the branch names from there.
  exitIfCatchupFileIsMissing

  FEATURE_BRANCH=`cat $FILE | awk '{print $1}'`
  TEMP_BRANCH=`cat $FILE | awk '{print $2}'`

  log "Resetting your cachges."
  git reset --hard HEAD .
  log "Deleting ${FILE}"
  rm $FILE
  log "Moving back to the feature branch: ${FEATURE_BRANCH}"
  git checkout $FEATURE_BRANCH -f
  git branch -D $TEMP_BRANCH
  log "Clean up - Done!"

elif [[ $1 == "-v" ]]; then
  echo $NAME $VERSION
  exit 0
else
  # if a branch name is provided, create a new (temporary) branch from it
  BRANCH_TO_CATCHUP_WITH=$1
  FEATURE_BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/')
  RANDOM_NUMBER="$(( ( RANDOM % 9 ) ))";

  addCatchupFileToGitignore

  # generates a random number to add to the branch's name
  i=1;
  while [[ i -lt $RANDOM_NUMBER_LENGTH ]]
    do
      RANDOM_NUMBER="${RANDOM_NUMBER}$(( ( RANDOM % 9 ) ))"
      i=$(($i + 1))
    done

  TEMP_BRANCH=${FEATURE_BRANCH}-temp${RANDOM_NUMBER}

  # before do anything, fetch the changes from the remote
  git fetch
  DIFF=`git diff ${BRANCH_TO_CATCHUP_WITH} 0> /dev/null`
  if [ ${#DIFF} -gt 0 ]; then
    git branch $TEMP_BRANCH $BRANCH_TO_CATCHUP_WITH
    git checkout $TEMP_BRANCH
    git merge $FEATURE_BRANCH

    # Keep temporary information regarding the branches names
    echo "$FEATURE_BRANCH $TEMP_BRANCH" > $FILE

    # echo "Resolve your conflicts and execute: catch-up --continue"
  else
    log "No changes here"
  fi
fi